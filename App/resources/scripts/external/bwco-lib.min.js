/////////////////////////////////////////////
// 
// BWCO JavaScript Library 0.2.0
// 
/////////////////////////////////////////////

/* **********************************************
     Begin utils.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.utils		= this.bwco.utils || { };


(function() {

	"use strict";


	// Package level methods
	/////////////////////////////////////////////

	bwco.utils.makeSingleton = function(SingletonClass) {

		var S			= SingletonClass;

		S.instance		= null;
		S.getInstance	= function() {
			if (S.instance == null) {
				S.instance = new S();
			}
			return S.instance;
		}

	}

	bwco.utils.extend = function(Subclass, Superclass) {

		function o() {
			this.constructor	= Subclass;
		}

		if (Superclass === undefined) {
			throw "Invalid Superclass defined in bwco.utils.extend";
		}

		o.prototype	= Superclass.prototype;

		return (Subclass.prototype	= new o());

	};

	bwco.utils.defined = function(val, nullIsOK) {

		var isDefined	= (typeof val !== "undefined");
		var isNull		= (val == null);

		if (nullIsOK) {
			return isDefined;
		} else {
			return isDefined && !isNull;
		}

	}

	bwco.utils.getUrlParam = function(pName) {

		var url		= window.location.search.substring(1);
		var vars	= url.split('&');

		for (var i = 0; i < vars.length; i++) {
			var param	= vars[i].split('=');
			if (param[0] == pName) {
				return param[1];
			}
		}

		return undefined;

	}


}());




/* **********************************************
     Begin Maths.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.utils		= this.bwco.utils || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Maths() {
		throw "Maths cannot be instantiated.";
	}


	// Static methods
	/////////////////////////////////////////////

	Maths.norm = function(val, min, max) {
		return (val - min) / (max - min);
	}
	Maths.map = function(val, min, max, tMin, tMax) {
		return Maths.lerp(tMin, tMax, Maths.norm(val, min, max));
	}
	Maths.lerp = function(min, max, val) {
		if (!bwco.utils.defined(val)) val = 0.5;
		return (min * (1 - val)) + (max * val)
	}
	Maths.clamp = function(val, min, max) {
		if (!bwco.utils.defined(min)) min = 0;
		if (!bwco.utils.defined(max)) max = 1;
		return Math.min(max, Math.max(min, val));
	}
	Maths.wrap = function(val, min, max) {
		var r	= (max - min) + 1,
			m	= (val - min) % r;
		return (m < 0) ? max + 1 + m : min + m;
	}
	Maths.mapToIndex = function(val, a) {
		return Math.min(a.length - 1, parseInt(Maths.lerp(0, a.length, val)));
	}
	Maths.diff = function(val1, val2) {
		return Math.abs(val1 - val2);
	}
	Maths.roundTo = function(val, places) {
		var mult	= Math.pow(10, places)
		return Math.round(val * mult) / mult;
	}
	Maths.sameSign = function(val1, val2) {
		return ((val1 < 0) == (val2 < 0));
	}
	Maths.isEven = function(val) {
		return (val % 2) == 0;
	}
	Maths.isOdd = function(val) {
		return (val % 2) != 0;
	}
	Maths.sign = function(val) {
		return (val < 0) ? -1 : 1;
	}
	Maths.ease = function(val, trgt, ease, diffMin) {

		ease		= bwco.utils.defined(ease) ? ease : 1/5;
		diffMin		= bwco.utils.defined(diffMin) ? diffMin : 0;

		return (Maths.diff(val, trgt) < diffMin) ? trgt : Maths.lerp(val, trgt, ease);

	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.utils.Maths = Maths;

}());


/* **********************************************
     Begin Arrays.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.utils		= this.bwco.utils || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Arrays() {
		throw "Arrays cannot be instantiated.";
	}


	// Static methods
	/////////////////////////////////////////////

	Arrays.next = function(index, array) {
		return Arrays.wrap(index + 1, array);
	}
	Arrays.prev = function(index, array) {
		return Arrays.wrap(index - 1, array);
	}
	Arrays.wrap = function(index, array) {
		return bwco.utils.Maths.wrap(index, 0, array.length - 1);
	}

	Arrays.sortOn = function(array, field, reverse, primer) {

		array.sort(sortBy(field, reverse, primer));

		function sortBy(field, reverse, primer) {

			var key	= primer ?
				function(x) { return primer(x[field]) } :
				function(x) { return x[field] };

			reverse	= !reverse ? 1 : -1;

			return function(a, b) {
				return a = key(a), b = key(b), reverse * ((a > b) - (b > a));
			}

		}

	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.utils.Arrays = Arrays;


}());




/* **********************************************
     Begin Time.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.utils		= this.bwco.utils || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Time() {
		throw "Time cannot be instantiated.";
	}


	// Constants
	/////////////////////////////////////////////

	Time.DAYS		= [
		"Sunday",
		"Monday",
		"Tuesday",
		"Wednesday",
		"Thursday",
		"Friday",
		"Saturday"
	];

	Time.MONTHS		= [
		"January",
		"February",
		"March",
		"April",
		"May",
		"June",
		"July",
		"August",
		"September",
		"October",
		"November",
		"December"
	];

	Time.SECOND		= 1000;
	Time.MINUTE		= Time.SECOND * 60;
	Time.HOUR		= Time.MINUTE * 60;
	Time.DAY		= Time.HOUR	  * 24;
	Time.WEEK		= Time.DAY	  * 7;
	Time.AVG_MONTH	= Time.DAY	  * 30.4368499;
	Time.AVG_YEAR	= Time.DAY	  * 365.242199;


	// Static methods
	/////////////////////////////////////////////

	Time.now = function() {
		return new Date().getTime();
	}

	Time.since = function(time) {
		return Time.now() - time;
	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.utils.Time = Time;


}());




/* **********************************************
     Begin Strings.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.utils		= this.bwco.utils || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Strings() {
		throw "Strings cannot be instantiated.";
	}


	// Static methods
	/////////////////////////////////////////////

	Strings.startsWith = function(string, val) {
		return string.substr(0, val.length) == val;
	}

	Strings.endsWith = function(string, val) {
		return string.substr(string.length - val.length, val.length) == val;
	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.utils.Strings = Strings;


}());




/* **********************************************
     Begin Random.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.utils		= this.bwco.utils || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Random() {
		throw "Random cannot be instantiated.";
	}


	// Static methods
	/////////////////////////////////////////////

	Random.integer = function(min, max) {
		return Math.floor(Math.random() * (max - min + 1)) + min;
	}
	Random.num = function(min, max) {
		return bwco.utils.Maths.lerp(min, max, Math.random());
	}
	Random.boolean = function(chance) {
		return Math.random() < chance;
	}
	Random.sign = function() {
		return Random.maybe() ? -1 : 1;
	}
	Random.maybe = function() {
		return Random.boolean(.5);
	}
	Random.index = function(array) {
		if (bwco.utils.defined(array) && array.length) {
			return Random.integer(0, array.length - 1)
		} else {
			return -1;
		}
	}
	Random.item = function(array) {
		return array[Random.index(array)];
	}
	Random.items = function(array, count) {

		var a	= array.slice();
		Random.shuffle(a);

		return a.slice(0, count);

	}
	Random.shuffled = function(array) {
		var a	= array.slice();
		Random.shuffle(a);
		return a;
	}
	Random.shuffle = function(array) {
		var m			= array.length, t, i;
		while (m) {
			i			= Math.floor(Math.random() * m--);
			t			= array[m];
			array[m]	= array[i];
			array[i]	= t;
		}
	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.utils.Random = Random;


}());




/* **********************************************
     Begin Keys.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.utils		= this.bwco.utils || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Keys() {
		throw "Keys cannot be instantiated.";
	}


	// Constants
	/////////////////////////////////////////////

	Keys.BACKSPACE	= 8;
	Keys.TAB		= 9;
	Keys.ENTER		= 13;
	Keys.ESC		= 27;
	Keys.SPACE		= 32;
	Keys.SPACEBAR	= 32;
	Keys.SPACE_BAR	= 32;
	Keys.LEFT		= 37;
	Keys.UP			= 38;
	Keys.RIGHT		= 39;
	Keys.DOWN		= 40;
	Keys.DELETE		= 46;
	Keys.A			= 65;
	Keys.B			= 66;
	Keys.C			= 67;
	Keys.D			= 68;
	Keys.E			= 69;
	Keys.F			= 70;
	Keys.G			= 71;
	Keys.H			= 72;
	Keys.I			= 73;
	Keys.J			= 74;
	Keys.K			= 75;
	Keys.L			= 76;
	Keys.M			= 77;
	Keys.N			= 78;
	Keys.O			= 79;
	Keys.P			= 80;
	Keys.Q			= 81;
	Keys.R			= 82;
	Keys.S			= 83;
	Keys.T			= 84;
	Keys.U			= 85;
	Keys.V			= 86;
	Keys.W			= 87;
	Keys.X			= 88;
	Keys.Y			= 89;
	Keys.Z			= 90;

	Keys.KEY_CODES	= {

		8: 8,		// Backspace
		9: 9,		// Tab
		13: 13,		// Enter
		27: 27,		// Esc
		32: 32,		// Space bar
		33: 49,		// !
		34: 222,	// "
		35: 51,		// #
		36: 52,		// $
		37: 53,		// %
		38: 55,		// &
		39: 222,	// '
		40: 57,		// (
		41: 48,		// )
		42: 56,		// *
		43: 187,	// +
		44: 188,	// ,
		45: 189,	// -
		46: 190,	// .
		47: 191,	// /
		48: 48,		// 0
		49: 49,		// 1
		50: 50,		// 2
		51: 51,		// 3
		52: 52,		// 4
		53: 53,		// 5
		54: 54,		// 6
		55: 55,		// 7
		56: 56,		// 8
		57: 57,		// 9
		58: 186,	// :
		59: 186,	// ;
		60: 188,	// <
		61: 187,	// =
		62: 190,	// >
		63: 191,	// ?
		64: 50,		// @
		65: 65,		// A
		66: 66,		// B
		67: 67,		// C
		68: 68,		// D
		69: 69,		// E
		70: 70,		// F
		71: 71,		// G
		72: 72,		// H
		73: 73,		// I
		74: 74,		// J
		75: 75,		// K
		76: 76,		// L
		77: 77,		// M
		78: 78,		// N
		79: 79,		// O
		80: 80,		// P
		81: 81,		// Q
		82: 82,		// R
		83: 83,		// S
		84: 84,		// T
		85: 85,		// U
		86: 86,		// V
		87: 87,		// W
		88: 88,		// X
		89: 89,		// Y
		90: 90,		// Z
		91: 219,	// [
		92: 220,	// \
		93: 221,	// ]
		94: 54,		// ^
		95: 189,	// _
		96: 192,	// `
		97: 65,		// A
		98: 66,		// B
		99: 67,		// C
		100: 68,	// D
		101: 69,	// E
		102: 70,	// F
		103: 71,	// G
		104: 72,	// H
		105: 73,	// I
		106: 74,	// J
		107: 75,	// K
		108: 76,	// L
		109: 77,	// M
		110: 78,	// N
		111: 79,	// O
		112: 80,	// P
		113: 81,	// Q
		114: 82,	// R
		115: 83,	// S
		116: 84,	// T
		117: 85,	// U
		118: 86,	// V
		119: 87,	// W
		120: 88,	// X
		121: 89,	// Y
		122: 90,	// Z
		123: 219,	// {
		124: 220,	// |
		125: 221,	// }
		126: 192,	// ~
		127: 46		// Delete

	};


	// Static methods
	/////////////////////////////////////////////

	Keys.keyCodeOf = function(char) {

		var charCode;

		if (typeof char === "string") {
			charCode = char.charCodeAt(0);
		} else {
			charCode = char;
		}

		return Keys.KEY_CODES[charCode] ? Keys.KEY_CODES[charCode] : -1;

	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.utils.Keys = Keys;


}());




/* **********************************************
     Begin Geom.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.utils		= this.bwco.utils || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Geom() {
		throw "Geom cannot be instantiated.";
	}


	// Static methods
	/////////////////////////////////////////////

	Geom.degToRad = function(val) {
		return val * (Math.PI / 180);
	}
	Geom.radToDeg = function(val) {
		return val * (180 / Math.PI);
	}

	Geom.dist = function(x1, y1, x2, y2) {
		return Math.sqrt(Geom.distSq(x1, y1, x2, y2));
	}
	Geom.distSq = function(x1, y1, x2, y2) {
		return ((x2 - x1) * (x2 - x1)) + ((y2 - y1) * (y2 - y1));
	}

	Geom.getFillRect = function(w, h, ax, ay, aw, ah) {

		var sw	= ah * w / h;
		var sh	= aw * h / w;
		var rw	= (sw > aw) ? sw : aw;
		var rh	= (sw > aw) ? ah : sh;
		var rx	= Math.min(ax, Math.max(ax + aw - rw, ax + Math.round((aw - rw) / 2)));
		var ry	= Math.min(ay, Math.max(ay + ah - rh, ay + Math.round((ah - rh) / 2)));

		return {
			x: rx,
			y: ry,
			width: rw,
			height: rh
		}

	}
	Geom.getFitRect = function(w, h, ax, ay, aw, ah) {

		var sw	= ah * w / h;
		var sh	= aw * h / w;
		var rw	= (sw <= aw) ? sw : aw;
		var rh	= (sw <= aw) ? ah : sh;
		var rx	= ax + Math.round((aw - rw) / 2);
		var ry	= ay + Math.round((ah - rh) / 2);

		return {
			x: rx,
			y: ry,
			width: rw,
			height: rh
		}

	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.utils.Geom = Geom;


}());




/* **********************************************
     Begin Colors.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.utils		= this.bwco.utils || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Colors() {
		throw "Colors cannot be instantiated.";
	}


	// Static methods
	/////////////////////////////////////////////

	Colors.hexToUint = function(hex) {
		return parseInt("0x" + ((hex.substr(0, 1) == "#") ? hex.substr(1, 6) : hex.substr(0, 6)));
	}

	Colors.uintToHex = function(color) {

		var rgb	= Colors.uintToRgb(color);
		var hex	= Colors.rgbToHex(rgb.r, rgb.g, rgb.b);

		return hex;

	}
	Colors.uintToRgb = function(color) {

		var r = (color >> 16) & 0xff;
		var g = (color >>  8) & 0xff;
		var b = (color      ) & 0xff;

		return {
			r: r,
			g: g,
			b: b
		}

	}
	Colors.uintToHsl = function(color) {

		var rgb	= Colors.uintToRgb(color);
		var hsl	= Colors.rgbToHsl(rgb.r, rgb.g, rgb.b);

		return hsl;

	}

	Colors.rgbToHex = function(r, g, b) {
		return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1, 7);
	}
	Colors.rgbToHsl = function(r, g, b) {

		r /= 255;
		g /= 255;
		b /= 255;

		var max	= Math.max(r, g, b),
			min	= Math.min(r, g, b);

		var h,
			s,
			l	= (max + min) / 2;

		if (max == min) {
			h = s = 0; // achromatic
		} else {
			var d = max - min;
			s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
			switch(max) {
				case r:
					h = (g - b) / d + (g < b ? 6 : 0);
					break;
				case g:
					h = (b - r) / d + 2;
					break;
				case b:
					h = (r - g) / d + 4;
					break;
			}
			h /= 6;
		}

		return {
			h: h,
			s: s,
			l: l
		};

	}

	Colors.hslToUint = function(h, s, l) {

		var rgb		= Colors.hslToRgb(h, s, l);
		var hex		= Colors.rgbToHex(rgb.r, rgb.g, rgb.b);
		var uint	= Colors.hexToUint(hex);

		return uint;

	}
	Colors.hslToRgb = function(h, s, l) {

		var r, g, b;

		if (s == 0) {
			r = g = b = l; // achromatic

		} else {

			var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
			var p = 2 * l - q;

			r = hue2rgb(p, q, h + 1/3);
			g = hue2rgb(p, q, h);
			b = hue2rgb(p, q, h - 1/3);

		}

		return {
			r: r * 255,
			g: g * 255,
			b: b * 255
		};

		function hue2rgb(p, q, t) {
			if (t < 0) t += 1;
			if (t > 1) t -= 1;
			if (t < 1/6) return p + (q - p) * 6 * t;
			if (t < 1/2) return q;
			if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;
			return p;
		}

	}

	Colors.mix = function(colorA, colorB, amt) {

		amt			= bwco.utils.defined(amt) ? amt : 0.5;

		var hsla	= Colors.uintToHsl(colorA);
		var hslb	= Colors.uintToHsl(colorB);

		var h		= bwco.utils.Maths.lerp(hsla.h, hslb.h, amt);
		var s		= bwco.utils.Maths.lerp(hsla.s, hslb.s, amt);
		var l		= bwco.utils.Maths.lerp(hsla.l, hslb.l, amt);

		return Colors.hslToUint(h, s, l);

	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.utils.Colors = Colors;


}());




/* **********************************************
     Begin Dispatcher.js
********************************************** */



// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.events	= this.bwco.events || { };


(function() {

	"use strict";


	// Constructor
	/////////////////////////////////////////////

	function Dispatcher() {


		// Private properties
		/////////////////////////////////////////////

		var _self		= this;

		var _listeners	= { };


		// Public methods
		/////////////////////////////////////////////

		this.addListener = function(type, listener) {

			if (!type || !listener) return;

			if (_listeners[type] === undefined) {
				_listeners[type]	= [];
			}

			if (_listeners[type].indexOf(listener) === -1) {
				_listeners[type].push(listener);
			}

		};
		this.hasListener = function(type, listener) {

			if ((_listeners[type] !== undefined) && (_listeners[type].indexOf(listener) !== -1)) {
				return true;
			}

			return false;

		};

		this.removeListener = function(type, listener) {

			var typeListeners	= _listeners[type];

			if (typeListeners !== undefined) {

				var index = typeListeners.indexOf(listener);

				if (index !== - 1) {
					typeListeners.splice(index, 1);
				}

			}

		};
		this.removeAllListeners = function(type) {
			if (!type) {
				_listeners = { };
			} else {
				if (_listeners) {
					delete(_listeners[type]);
				}
			}
		};

		this.dispatch = function(type, data) {

			if (!type) return;

			var typeListeners	= _listeners[type];

			if (typeListeners !== undefined) {

				data		= data || { };
				data.target	= _self;
				data.type	= type;

				for (var i = 0; i < typeListeners.length; i++) {
					typeListeners[i].call(_self, data);
				}

			}

		};


	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.events.Dispatcher = Dispatcher;


}());



/* **********************************************
     Begin Area.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.geom		= this.bwco.geom || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Area(x, y, w, h) {

		// Private properties
		/////////////////////////////////////////////

		var _self	= this;

		var Pt		= bwco.geom.Pt,
			Area	= bwco.geom.Area,
			Size	= bwco.geom.Size,
			Range	= bwco.math.Range,
			Maths	= bwco.utils.Maths;

		var _x		= x,
			_y		= y,
			_w		= w,
			_h		= h;


		// Getters & setters
		/////////////////////////////////////////////

		Object.defineProperties(this, {

			"x": {
				get: function() {
					return _x;
				},
				set: function(val) {
					_x	= val;
				},
				enumerable: true
			},
			"y": {
				get: function() {
					return _y;
				},
				set: function(val) {
					_y	= val;
				},
				enumerable: true
			},

			"width": {
				get: function() {
					return _w;
				},
				set: function(val) {
					_w	= val;
				},
				enumerable: true
			},
			"height": {
				get: function() {
					return _h;
				},
				set: function(val) {
					_h	= val;
				},
				enumerable: true
			},

			"left": {
				get: function() {
					return _x;
				},
				enumerable: true
			},
			"top": {
				get: function() {
					return _y;
				},
				enumerable: true
			},
			"right": {
				get: function() {
					return _x + _w;
				},
				enumerable: true
			},
			"bottom": {
				get: function() {
					return _y + _h;
				},
				enumerable: true
			},

			"xRange": {
				get: function() {
					return new Range(_x, _x + _w);
				}
			},
			"yRange": {
				get: function() {
					return new Range(_y, _y + _h);
				}
			},

			"centerX": {
				get: function() {
					return _self.xRange.lerp(.5);
				}
			},
			"centerY": {
				get: function() {
					return _self.yRange.lerp(.5);
				}
			},
			"centerPt": {
				get: function() {
					return new Pt(_self.centerX, _self.centerY);
				}
			},

			"randomX": {
				get: function() {
					return _self.xRange.random;
				}
			},
			"randomY": {
				get: function() {
					return _self.yRange.random;
				}
			},
			"randomPt": {
				get: function() {
					return new Pt(_self.randomX, _self.randomY);
				}
			},

			"topLeftPt": {
				get: function() {
					return new Pt(_x, _y);
				}
			},
			"topRightPt": {
				get: function() {
					return new Pt(_x + _w, _y);
				}
			},
			"bottomLeftPt": {
				get: function() {
					return new Pt(_x, _y);
				}
			},
			"bottomRightPt": {
				get: function() {
					return new Pt(_x, _y);
				}
			},

			"size": {
				get: function() {
					return new Size(_w, _h);
				}
			},

			"whRatio": {
				get: function() {
					return _self.size.whRatio;
				}
			},
			"hwRatio": {
				get: function() {
					return _self.size.hwRatio;
				}
			}

		});


		// Public methods
		/////////////////////////////////////////////

		this.clone = function() {
			return new Area(_x, _y, _w, _h);
		}

		this.clampPt = function(pt) {
			var px	= _self.xRange.clamp(pt.x);
			var py	= _self.yRange.clamp(pt.y);
			return new Pt(px, py);
		}

		this.toString = function(roundTo) {

			var x	= bwco.utils.defined(roundTo) ? Maths.roundTo(_x, roundTo) : _x,
				y	= bwco.utils.defined(roundTo) ? Maths.roundTo(_y, roundTo) : _y,
				w	= bwco.utils.defined(roundTo) ? Maths.roundTo(_w, roundTo) : _w,
				h	= bwco.utils.defined(roundTo) ? Maths.roundTo(_h, roundTo) : _h;

			return "(x: " + x + ", y: " + y + ", width: " + w + ", height: " + h + ")";
		}

		this.contains = function(pt) {

			if (pt.x < _x) return false;
			if (pt.y < _y) return false;
			if (pt.x > _x + _w) return false;
			if (pt.y > _y + _h) return false;

			return true;

		}

		this.containsXY = function(x, y) {

			if (x < _x) return false;
			if (y < _y) return false;
			if (x > _x + _w) return false;
			if (y > _y + _h) return false;

			return true;

		}

		this.expand = function(amt) {

			_x -= amt;
			_y -= amt;
			_w += (amt * 2);
			_h += (amt * 2);

		}


	}


	// Static methods
	/////////////////////////////////////////////

	Area.fromXYs = function(x1, y1, x2, y2) {
		var w	= x2 - x1;
		var h	= y2 - y1;
		return new Area(x1, y1, w, h);
	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.geom.Area = Area;


}());




/* **********************************************
     Begin Pt.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.geom		= this.bwco.geom || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Pt(x, y) {

		// Private properties
		/////////////////////////////////////////////

		var _self	= this;

		var Maths	= bwco.utils.Maths;

		var _x		= bwco.utils.defined(x) ? x : 0,
			_y		= bwco.utils.defined(y) ? y : 0;


		// Getters & setters
		/////////////////////////////////////////////

		Object.defineProperties(this, {

			"x": {
				get: function() {
					return _x;
				},
				set: function(val) {
					_x	= val;
				},
				enumerable: true
			},
			"y": {
				get: function() {
					return _y;
				},
				set: function(val) {
					_y	= val;
				},
				enumerable: true
			}

		});


		// Public methods
		/////////////////////////////////////////////

		this.distanceTo = function(pt) {
			return bwco.utils.Geom.dist(_self.x, _self.y, pt.x, pt.y);
		}

		this.distanceToXY = function(x, y) {
			return bwco.utils.Geom.dist(_self.x, _self.y, x, y);
		}

		this.toString = function() {
			return "(x: " + _x + ", y: " + _y + ")";
		}

		this.add = function(pt) {
			return new Pt(_x + pt.x, _y + pt.y);
		}

		this.subtract = function(pt) {
			return new Pt(_x - pt.x, _y - pt.y);
		}

		this.length = function() {
			return bwco.utils.Geom.dist(_x, _y, 0, 0);
		}

		this.clone = function() {
			return new Pt(_x, _y);
		}

		this.toString = function(roundTo) {

			var x	= bwco.utils.defined(roundTo) ? Maths.roundTo(_x, roundTo) : _x,
				y	= bwco.utils.defined(roundTo) ? Maths.roundTo(_y, roundTo) : _y;

			return "(x: " + x + ", y: " + y + ")";

		}


	}

	// Static methods
	/////////////////////////////////////////////

	Pt.distance = function(ptA, ptB) {
		return bwco.utils.Geom.dist(ptA.x, ptA.y, ptB.x, ptB.y);
	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.geom.Pt = Pt;


}());




/* **********************************************
     Begin Size.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.geom		= this.bwco.geom || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Size(w, h) {

		// Private properties
		/////////////////////////////////////////////

		var _self	= this;

		var _w		= w,
			_h		= h;


		// Getters & setters
		/////////////////////////////////////////////

		Object.defineProperties(this, {

			"width": {
				get: function() {
					return _w;
				}
			},
			"height": {
				get: function() {
					return _h;
				}
			},

			"whRatio": {
				get: function() {
					return _w / _h;
				}
			},
			"hwRatio": {
				get: function() {
					return _h / _w;
				}
			},

			"halfW": {
				get: function() {
					return _w / 2;
				}
			},
			"halfH": {
				get: function() {
					return _h / 2;
				}
			}

		});

	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.geom.Size = Size;


}());




/* **********************************************
     Begin IdleEvent.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.idle		= this.bwco.idle || { };


(function() {

	"use strict";


	// Enum
	/////////////////////////////////////////////

	var IdleEvent = Object.freeze({

		IDLE:		"IdleEvent.IDLE",
		BREAK:		"IdleEvent.BREAK",
		RESET:		"IdleEvent.RESET"

	});


	// Add to namespace
	/////////////////////////////////////////////

	bwco.idle.IdleEvent	= IdleEvent;


}());



/* **********************************************
     Begin IdleModel.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.idle		= this.bwco.idle || { };


(function() {

	"use strict";


	// Constructor
	/////////////////////////////////////////////

	function IdleModel() {

		// Imports
		/////////////////////////////////////////////

		var Dispatcher		= bwco.events.Dispatcher,
			IdleEvent		= bwco.idle.IdleEvent;


		// Superclass
		/////////////////////////////////////////////

		Dispatcher.call(this);


		// Constants
		/////////////////////////////////////////////

		var DEFAULT_TIMEOUT_SECS	= 90;


		// Private properties
		/////////////////////////////////////////////

		var _self			= this;

		var _timeout,
			_secs			= DEFAULT_TIMEOUT_SECS,
			_idle			= false;


		// Getters & setters
		/////////////////////////////////////////////

		Object.defineProperties(this, {

			"idle": {

				get: function() {
					return _idle;
				}

			},

			"timeoutSecs": {

				get: function() {
					return _secs;
				},

				set: function(val) {
					if (val != _secs) {
						_secs	= val;
						reset();
					}
				}

			}

		})


		// Public methods
		/////////////////////////////////////////////

		this.startIdle = function() {

			clearTimeout(_timeout);

			if (!_idle) {
				_idle	= true;
				_self.dispatch(IdleEvent.IDLE);
			}

		}
		this.breakIdle = function() {

			if (_idle) {
				_idle	= false;
				_self.dispatch(IdleEvent.BREAK);
			}

			reset();

		}


		// Event handlers
		/////////////////////////////////////////////

		function onIdleTimeout() {

			_self.startIdle();

		}


		// Private methods
		/////////////////////////////////////////////

		function reset() {

			clearTimeout(_timeout);

			if (_secs > 0) {
				_timeout	= setTimeout(onIdleTimeout, _secs * 1000);
			}

			_self.dispatch(IdleEvent.RESET);

		}


		// Helpers
		/////////////////////////////////////////////


		// Init
		/////////////////////////////////////////////

		reset();


	}


	// Inheritance
	/////////////////////////////////////////////

	bwco.utils.extend(IdleModel, bwco.events.Dispatcher);
	bwco.utils.makeSingleton(IdleModel);


	// Add to namespace
	/////////////////////////////////////////////

	bwco.idle.IdleModel		= IdleModel;


}());



/* **********************************************
     Begin Range.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.math		= this.bwco.math || { };


(function() {

	"use strict";

	// Constructor
	/////////////////////////////////////////////

	function Range(min, max) {

		// Private properties
		/////////////////////////////////////////////

		var _self	= this;

		var Maths	= bwco.utils.Maths,
			Random	= bwco.utils.Random;

		var _min	= min,
			_max	= max;


		// Getters & setters
		/////////////////////////////////////////////

		Object.defineProperties(this, {

			"min": {
				get: function() {
					return _min;
				},
				set: function(val) {
					_min	= val;
				},
				enumerable: true
			},
			"max": {
				get: function() {
					return _max;
				},
				set: function(val) {
					_max	= val;
				},
				enumerable: true
			},

			"length": {
				get: function() {
					return _max - _min;
				}
			},

			"random": {
				get: function() {
					return Random.num(_min, _max);
				}
			},
			"randomInt": {
				get: function() {
					return Random.integer(_min, _max);
				}
			}

		});


		// Public methods
		/////////////////////////////////////////////

		this.lerp = function(val) {
			return Maths.lerp(_min, _max, val);
		}
		this.norm = function(val) {
			return Maths.norm(val, _min, _max);
		}

		this.mapFrom = function(val, fromMin, fromMax) {
			return Maths.map(val, fromMin, fromMax, _min, _max);
		}
		this.mapTo = function(val, toMin, toMax) {
			return Maths.map(val, _min, _max, toMin, toMax);
		}

		this.clamp = function(val) {
			return Maths.clamp(val, _min, _max);
		}
		this.wrap = function(val) {
			return Maths.wrap(val, _min, _max);
		}

		this.contains = function(val) {
			return (val >= _min) && (val <= _max);
		}

		this.toString = function() {
			return "[" + _min + ".." + _max + "]";
		}

	}


	// Add to namespace
	/////////////////////////////////////////////

	bwco.math.Range = Range;


}());




/* **********************************************
     Begin StateEvent.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.state		= this.bwco.state || { };


(function() {

	"use strict";


	// Enum
	/////////////////////////////////////////////

	var StateEvent = Object.freeze({

		UPDATE:		"StateEvent.UPDATE"

	});


	// Add to namespace
	/////////////////////////////////////////////

	bwco.state.StateEvent	= StateEvent;


}());



/* **********************************************
     Begin StateModel.js
********************************************** */



// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.state		= this.bwco.state || { };


(function() {

	"use strict";


	// Constructor
	/////////////////////////////////////////////

	function StateModel() {

		// Imports
		/////////////////////////////////////////////

		var Dispatcher	= bwco.events.Dispatcher,
			StateEvent	= bwco.state.StateEvent;


		// Superclass
		/////////////////////////////////////////////

		Dispatcher.call(this);


		// Private properties
		/////////////////////////////////////////////

		var _self		= this,
			_state		= undefined;


		// Getters & setters
		/////////////////////////////////////////////

		Object.defineProperties(_self, {

			"state": {

				get: function() {
					return _state;
				},

				set: function(val) {
					if (_state != val) {
						_state = val;

						_self.dispatch(StateEvent.UPDATE, {
							state: _state
						})
					}
				}

			}

		});


		// Private methods
		/////////////////////////////////////////////


	}


	// Inheritance
	/////////////////////////////////////////////

	bwco.utils.extend(StateModel, bwco.events.Dispatcher);


	// Add to namespace
	/////////////////////////////////////////////

	bwco.state.StateModel = StateModel;


}());



/* **********************************************
     Begin Ticker.js
********************************************** */




// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.ticker	= this.bwco.ticker || { };


(function() {

	"use strict";


	// Constructor
	/////////////////////////////////////////////

	function Ticker() {

		// Imports
		/////////////////////////////////////////////

		var Dispatcher	= bwco.events.Dispatcher,
			TickerEvent	= bwco.ticker.TickerEvent,
			Time		= bwco.utils.Time;


		// Superclass
		/////////////////////////////////////////////

		Dispatcher.call(this);


		// Private properties
		/////////////////////////////////////////////

		var _self		= this;

		var _lastTime	= Time.now();


		// Getters & setters
		/////////////////////////////////////////////


		// Event handlers
		/////////////////////////////////////////////

		function onFrame() {

			window.requestAnimationFrame(onFrame);

			var now		= Time.now();

			_self.dispatch(TickerEvent.TICK, {
				elapsed: now - _lastTime,
				fps: 1000 / (now - _lastTime)
			});

			_lastTime	= now;

		}


		// Private methods
		/////////////////////////////////////////////


		// Init
		/////////////////////////////////////////////

		onFrame();


	}


	// Inheritance
	/////////////////////////////////////////////

	bwco.utils.extend(Ticker, bwco.events.Dispatcher);
	bwco.utils.makeSingleton(Ticker);


	// Add to namespace
	/////////////////////////////////////////////

	bwco.ticker.Ticker = Ticker;


}());





/* **********************************************
     Begin TickerEvent.js
********************************************** */


// Namespace
/////////////////////////////////////////////

this.bwco			= this.bwco || { };
this.bwco.ticker	= this.bwco.ticker || { };


(function() {

	"use strict";


	// Enum
	/////////////////////////////////////////////

	var TickerEvent = Object.freeze({

		TICK:		"TickerEvent.TICK"

	});


	// Add to namespace
	/////////////////////////////////////////////

	bwco.ticker.TickerEvent	= TickerEvent;


}());

